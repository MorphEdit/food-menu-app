import React, { useState, useEffect } from 'react';
import { Link } from 'react-router-dom';
import { useCart } from '../contexts/CartContext';
import MenuItem from './MenuItem';
import Loading from './Loading';
import '../styles/MenuPage.css';

function MenuPage() {
    const [menuItems, setMenuItems] = useState([]);
    const [loading, setLoading] = useState(true);
    const [searchTerm, setSearchTerm] = useState('');
    const { cart, addToCart } = useCart();
    
    useEffect(() => {
        // ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å localStorage
        const savedItems = localStorage.getItem('menuItems');
        if (savedItems) {
          setMenuItems(JSON.parse(savedItems));
          setLoading(false);
        } else {
          // ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á
          const sampleMenuItems = [
            { _id: 1, name: '‡∏Ç‡πâ‡∏≤‡∏ß‡∏ú‡∏±‡∏î‡∏Å‡∏£‡∏∞‡πÄ‡∏û‡∏£‡∏≤', description: '‡∏Ç‡πâ‡∏≤‡∏ß‡∏ú‡∏±‡∏î‡∏Å‡∏£‡∏∞‡πÄ‡∏û‡∏£‡∏≤‡∏´‡∏°‡∏π‡∏™‡∏±‡∏ö ‡πÑ‡∏Ç‡πà‡∏î‡∏≤‡∏ß', price: 60, category: '‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏à‡∏≤‡∏ô‡πÄ‡∏î‡∏µ‡∏¢‡∏ß' },
            { _id: 2, name: '‡∏ú‡∏±‡∏î‡πÑ‡∏ó‡∏¢', description: '‡∏ú‡∏±‡∏î‡πÑ‡∏ó‡∏¢‡∏Å‡∏∏‡πâ‡∏á‡∏™‡∏î ‡πÉ‡∏™‡πà‡πÑ‡∏Ç‡πà', price: 80, category: '‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏à‡∏≤‡∏ô‡πÄ‡∏î‡∏µ‡∏¢‡∏ß' },
            { _id: 3, name: '‡∏ï‡πâ‡∏°‡∏¢‡∏≥‡∏Å‡∏∏‡πâ‡∏á', description: '‡∏ï‡πâ‡∏°‡∏¢‡∏≥‡∏Å‡∏∏‡πâ‡∏á‡∏ô‡πâ‡∏≥‡∏Ç‡πâ‡∏ô', price: 120, category: '‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏ó‡∏≤‡∏ô‡πÄ‡∏•‡πà‡∏ô' },
            { _id: 4, name: '‡∏™‡πâ‡∏°‡∏ï‡∏≥‡πÑ‡∏ó‡∏¢', description: '‡∏™‡πâ‡∏°‡∏ï‡∏≥‡πÑ‡∏ó‡∏¢‡∏£‡∏™‡∏à‡∏±‡∏î', price: 60, category: '‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏ó‡∏≤‡∏ô‡πÄ‡∏•‡πà‡∏ô' },
            { _id: 5, name: '‡πÅ‡∏Å‡∏á‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß‡∏´‡∏ß‡∏≤‡∏ô', description: '‡πÅ‡∏Å‡∏á‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß‡∏´‡∏ß‡∏≤‡∏ô‡πÑ‡∏Å‡πà', price: 80, category: '‡πÅ‡∏Å‡∏á‡πÅ‡∏•‡∏∞‡∏ã‡∏∏‡∏õ' },
            { _id: 6, name: '‡∏Ç‡πâ‡∏≤‡∏ß‡∏°‡∏±‡∏ô‡πÑ‡∏Å‡πà', description: '‡∏Ç‡πâ‡∏≤‡∏ß‡∏°‡∏±‡∏ô‡πÑ‡∏Å‡πà‡∏ï‡πâ‡∏° ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏ô‡πâ‡∏≥‡∏à‡∏¥‡πâ‡∏°', price: 70, category: '‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏à‡∏≤‡∏ô‡πÄ‡∏î‡∏µ‡∏¢‡∏ß' },
          ];
          setTimeout(() => {
            setMenuItems(sampleMenuItems);
            localStorage.setItem('menuItems', JSON.stringify(sampleMenuItems));
            setLoading(false);
          }, 1000);
        }
    }, []);
    
    // ‡πÅ‡∏¢‡∏Å‡πÄ‡∏°‡∏ô‡∏π‡∏ï‡∏≤‡∏°‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà
    const getCategories = () => {
        const categories = {};
        menuItems.forEach(item => {
            if (!categories[item.category]) {
                categories[item.category] = [];
            }
            categories[item.category].push(item);
        });
        return categories;
    };
    
    // ‡∏Å‡∏£‡∏≠‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏ï‡∏≤‡∏°‡∏Ñ‡∏≥‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤
    const filteredItems = menuItems.filter(item => 
        item.name.toLowerCase().includes(searchTerm.toLowerCase()) ||
        item.description.toLowerCase().includes(searchTerm.toLowerCase()) ||
        item.category.toLowerCase().includes(searchTerm.toLowerCase())
    );
    
    if (loading) return <Loading />;
    
    const categories = getCategories();
    
    // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏ô‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤
    const totalItems = cart.reduce((sum, item) => sum + item.quantity, 0);
    
    return (
        <div className="menu-page">
            <div className="header">
                <h1>‡πÄ‡∏°‡∏ô‡∏π‡∏≠‡∏≤‡∏´‡∏≤‡∏£</h1>
                <div className="search-container">
                    <input 
                        type="text" 
                        placeholder="‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÄ‡∏°‡∏ô‡∏π‡∏≠‡∏≤‡∏´‡∏≤‡∏£..." 
                        value={searchTerm}
                        onChange={(e) => setSearchTerm(e.target.value)}
                        className="search-input"
                    />
                </div>
                <Link to="/cart" className="cart-icon">
                    üõí
                    {totalItems > 0 && <span className="cart-count">{totalItems}</span>}
                </Link>
            </div>
            
            {searchTerm ? (
                <div className="search-results">
                    <h2>‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤: {searchTerm}</h2>
                    {filteredItems.length === 0 ? (
                        <p className="no-results">‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÄ‡∏°‡∏ô‡∏π‡∏ó‡∏µ‡πà‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤</p>
                    ) : (
                        <div className="menu-grid">
                            {filteredItems.map(item => (
                                <MenuItem
                                    key={item._id}
                                    item={item}
                                    onAddToCart={() => addToCart(item)}
                                />
                            ))}
                        </div>
                    )}
                </div>
            ) : (
                Object.keys(categories).map(category => (
                    <div key={category} className="menu-category">
                        <h2 className="menu-category-title">{category}</h2>
                        <div className="menu-grid">
                            {categories[category].map(item => (
                                <MenuItem
                                    key={item._id}
                                    item={item}
                                    onAddToCart={() => addToCart(item)}
                                />
                            ))}
                        </div>
                    </div>
                ))
            )}
        </div>
    );
}

export default MenuPage;